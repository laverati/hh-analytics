import requests
import pandas as pd
from datetime import datetime, timedelta
import time

# === –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ===
role_ids = [10, 12, 56, 57, 153, 155]  # –†–æ–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤
region_ids = [1, 2, 3, 66, 88, 54, 68, 76, 111, 104]  # ID –≥–æ—Ä–æ–¥–æ–≤: –ú–æ—Å–∫–≤–∞, –ü–∏—Ç–µ—Ä, –ù–æ–≤–æ—Å–∏–±–∏—Ä—Å–∫ –∏ –¥—Ä.
date_from = (datetime(2025, 5, 3) - timedelta(days=30)).strftime('%Y-%m-%d')
per_page = 100
max_pages = 20
all_vacancies = []

print(f"üì¶ –°–±–æ—Ä –≤–∞–∫–∞–Ω—Å–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–≤ –ø–æ —Ä–µ–≥–∏–æ–Ω–∞–º —Å {date_from} –ø–æ 03.05.2025...\n")

# === –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö ===
for region_id in region_ids:
    print(f"üåç –†–µ–≥–∏–æ–Ω ID: {region_id}")
    for role_id in role_ids:
        print(f"  üîç –†–æ–ª—å ID: {role_id}")
        for page in range(max_pages):
            params = {
                'professional_role': role_id,
                'date_from': date_from,
                'page': page,
                'per_page': per_page,
                'text': '–∞–Ω–∞–ª–∏—Ç–∏–∫',
                'area': region_id
            }

            try:
                print(f"    ‚Üí –°—Ç—Ä–∞–Ω–∏—Ü–∞ {page}...", end=" ")
                response = requests.get("https://api.hh.ru/vacancies", params=params, timeout=10)
                print(f"–°—Ç–∞—Ç—É—Å: {response.status_code}")

                if response.status_code != 200:
                    print("    ‚ùå –û—à–∏–±–∫–∞, –ø—Ä–æ–ø—É—Å–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã")
                    break

                data = response.json()
                items = data.get("items", [])
                print(f"    ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ: {len(items)} –≤–∞–∫–∞–Ω—Å–∏–π")

                all_vacancies.extend(items)

                if page >= data.get("pages", 0) - 1:
                    break

                time.sleep(0.5)

            except Exception as e:
                print(f"    ‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: {e}")
                break

# === –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö ===
safe_data = []
for item in all_vacancies:
    salary = item.get("salary") or {}
    vac_id = item.get("id")
    safe_data.append({
        "name": item.get("name"),
        "salary_from": salary.get("from"),
        "salary_to": salary.get("to"),
        "employment": item.get("employment", {}).get("name"),
        "schedule": item.get("schedule", {}).get("name"),  # üëà –§–æ—Ä–º–∞—Ç —Ä–∞–±–æ—Ç—ã
        "experience": item.get("experience", {}).get("name"),
        "area": item.get("area", {}).get("name"),
        "published_at": item.get("published_at"),
        "url": f"https://hh.ru/vacancy/{vac_id}" if vac_id else None
    })

df = pd.DataFrame(safe_data)

# –ü—Ä–∏–≤–µ–¥–µ–Ω–∏–µ —Ç–∏–ø–æ–≤
df["salary_from"] = pd.to_numeric(df["salary_from"], errors="coerce")
df["salary_to"] = pd.to_numeric(df["salary_to"], errors="coerce")
df["published_at"] = pd.to_datetime(df["published_at"], errors="coerce")

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
df.to_csv("analytics.csv", index=False, encoding="utf-8-sig")
print(f"\n‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ {len(df)} –≤–∞–∫–∞–Ω—Å–∏–π –≤ 'analytics.csv'")
